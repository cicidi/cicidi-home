
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v1.4.2.RELEASE)

[main] INFO com.cicidi.home.Application - Starting Application on DESKTOP-B84K2JO with PID 10784 (D:\project\cicidi-home\target\classes started by cicidi in D:\project\cicidi-home)
[main] INFO com.cicidi.home.Application - No active profile set, falling back to default profiles: default
[main] INFO org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2cb2fc20: startup date [Sat Mar 11 02:02:32 PST 2017]; root of context hierarchy
[main] INFO org.springframework.beans.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'gitHubService' with a different definition: replacing [Generic bean: class [com.cicidi.home.service.GitHubService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\project\cicidi-home\target\classes\com\cicidi\home\service\GitHubService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=serviceConfiguration; factoryMethodName=gitHubService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/cicidi/home/configuration/ServiceConfiguration.class]]
[main] INFO org.springframework.beans.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'googleMapService' with a different definition: replacing [Generic bean: class [com.cicidi.home.service.GoogleMapService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\project\cicidi-home\target\classes\com\cicidi\home\service\GoogleMapService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=serviceConfiguration; factoryMethodName=googleMapService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/cicidi/home/configuration/ServiceConfiguration.class]]
[main] INFO org.springframework.beans.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
[main] INFO org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[main] INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1e983b92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[main] INFO org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
Mar 11, 2017 2:02:35 AM org.apache.catalina.core.StandardService startInternal
INFO: Starting service Tomcat
Mar 11, 2017 2:02:35 AM org.apache.catalina.core.StandardEngine startInternal
INFO: Starting Servlet Engine: Apache Tomcat/8.5.6
Mar 11, 2017 2:02:35 AM org.apache.catalina.core.ApplicationContext log
INFO: Initializing Spring embedded WebApplicationContext
[localhost-startStop-1] INFO org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2592 ms
[localhost-startStop-1] INFO org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
[localhost-startStop-1] INFO org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
[localhost-startStop-1] INFO org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[localhost-startStop-1] INFO org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[localhost-startStop-1] INFO org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
[localhost-startStop-1] INFO org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean - Mapping filter: 'springSecurityFilterChain' to: [/*]
[localhost-startStop-1] INFO org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[localhost-startStop-1] INFO org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
[localhost-startStop-1] INFO org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
[localhost-startStop-1] INFO org.springframework.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
[main] INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
Mar 11, 2017 2:02:35 AM org.hibernate.jpa.internal.util.LogHelper logPersistenceUnitInformation
INFO: HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
Mar 11, 2017 2:02:36 AM org.hibernate.Version logVersion
INFO: HHH000412: Hibernate Core {5.0.11.Final}
Mar 11, 2017 2:02:36 AM org.hibernate.cfg.Environment <clinit>
INFO: HHH000206: hibernate.properties not found
Mar 11, 2017 2:02:36 AM org.hibernate.cfg.Environment buildBytecodeProvider
INFO: HHH000021: Bytecode provider name : javassist
Mar 11, 2017 2:02:36 AM org.hibernate.annotations.common.reflection.java.JavaReflectionManager <clinit>
INFO: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Mar 11, 2017 2:02:36 AM org.hibernate.dialect.Dialect <init>
INFO: HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Mar 11, 2017 2:02:36 AM org.hibernate.tuple.PojoInstantiator <init>
INFO: HHH000182: No default (no-argument) constructor for class: com.cicidi.home.domain.account.Account (class must be instantiated by Interceptor)
Mar 11, 2017 2:02:36 AM org.hibernate.tool.hbm2ddl.SchemaUpdate execute
INFO: HHH000228: Running hbm2ddl schema update
[main] INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[main] INFO org.springframework.beans.factory.config.PropertiesFactoryBean - Loading properties file from class path resource [rest-default-messages.properties]
[main] INFO org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
[main] INFO org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.css'], []
[main] INFO org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.png'], []
[main] INFO org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.gif'], []
[main] INFO org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**/*.jpg'], []
[main] INFO org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: Ant [pattern='/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@34ac72c3, org.springframework.security.web.context.SecurityContextPersistenceFilter@167ccc3c, org.springframework.security.web.header.HeaderWriterFilter@c680819, org.springframework.security.web.csrf.CsrfFilter@2e2a2b07, org.springframework.security.web.authentication.logout.LogoutFilter@56afbace, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@57f1fbae, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3e242137, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4b477121, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@289b7efe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6cd8c373, org.springframework.security.web.session.SessionManagementFilter@40aaf656, org.springframework.security.web.access.ExceptionTranslationFilter@7cddc50f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@68ee7b3b]
[main] INFO org.springframework.security.web.DefaultSecurityFilterChain - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@3b22bcad, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@735dc133, org.springframework.security.web.context.SecurityContextPersistenceFilter@2e778abb, org.springframework.security.web.header.HeaderWriterFilter@7f065f9e, org.springframework.security.web.authentication.logout.LogoutFilter@4c5ae26d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@58a5b69c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@154cbb46, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@58fbecde, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@57330423, org.springframework.security.web.session.SessionManagementFilter@106c3e0a, org.springframework.security.web.access.ExceptionTranslationFilter@1b641c97, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3f9ee527]
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2cb2fc20: startup date [Sat Mar 11 02:02:32 PST 2017]; root of context hierarchy
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/option],methods=[GET]}" onto java.lang.String com.cicidi.home.controller.HomeController.option(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.security.Principal) throws java.lang.Exception
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/home]}" onto public java.lang.String com.cicidi.home.controller.HomeController.home(java.security.Principal,org.springframework.ui.Model)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/resumeProfile],methods=[GET]}" onto java.lang.String com.cicidi.home.controller.HomeController.resumeProfile(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.security.Principal) throws java.lang.Exception
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/linkedin/expired]}" onto public void com.cicidi.home.controller.linkedin.LinkedinExpiredToken.simulateExpiredToken()
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/linkedin/feed],methods=[GET]}" onto public java.lang.String com.cicidi.home.controller.linkedin.LinkedinFeedController.showFeed(org.springframework.ui.Model)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/linkedin/friends],methods=[GET]}" onto public java.lang.String com.cicidi.home.controller.linkedin.LinkedinFriendsController.showFeed(org.springframework.ui.Model)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/linkedin],methods=[GET]}" onto public java.lang.String com.cicidi.home.controller.linkedin.LinkedinProfileController.home(org.springframework.ui.Model)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/signin],methods=[GET]}" onto public void com.cicidi.home.controller.signin.SigninController.signin()
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/signup],methods=[POST]}" onto public java.lang.String com.cicidi.home.controller.signup.SignupController.signup(com.cicidi.home.controller.signup.SignupForm,org.springframework.validation.BindingResult,org.springframework.web.context.request.WebRequest)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/signup],methods=[GET]}" onto public com.cicidi.home.controller.signup.SignupForm com.cicidi.home.controller.signup.SignupController.signupForm(org.springframework.web.context.request.WebRequest)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/connect/{providerId}],methods=[POST]}" onto public org.springframework.web.servlet.view.RedirectView org.springframework.social.connect.web.ConnectController.connect(java.lang.String,org.springframework.web.context.request.NativeWebRequest)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/connect/{providerId}],methods=[GET],params=[code]}" onto public org.springframework.web.servlet.view.RedirectView org.springframework.social.connect.web.ConnectController.oauth2Callback(java.lang.String,org.springframework.web.context.request.NativeWebRequest)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/connect/{providerId}],methods=[GET],params=[oauth_token]}" onto public org.springframework.web.servlet.view.RedirectView org.springframework.social.connect.web.ConnectController.oauth1Callback(java.lang.String,org.springframework.web.context.request.NativeWebRequest)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/connect/{providerId}],methods=[GET]}" onto public java.lang.String org.springframework.social.connect.web.ConnectController.connectionStatus(java.lang.String,org.springframework.web.context.request.NativeWebRequest,org.springframework.ui.Model)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/connect],methods=[GET]}" onto public java.lang.String org.springframework.social.connect.web.ConnectController.connectionStatus(org.springframework.web.context.request.NativeWebRequest,org.springframework.ui.Model)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/connect/{providerId}/{providerUserId}],methods=[DELETE]}" onto public org.springframework.web.servlet.view.RedirectView org.springframework.social.connect.web.ConnectController.removeConnection(java.lang.String,java.lang.String,org.springframework.web.context.request.NativeWebRequest)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/connect/{providerId}],methods=[GET],params=[error]}" onto public org.springframework.web.servlet.view.RedirectView org.springframework.social.connect.web.ConnectController.oauth2ErrorCallback(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.web.context.request.NativeWebRequest)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/connect/{providerId}],methods=[DELETE]}" onto public org.springframework.web.servlet.view.RedirectView org.springframework.social.connect.web.ConnectController.removeConnections(java.lang.String,org.springframework.web.context.request.NativeWebRequest)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/signin/{providerId}],methods=[POST]}" onto public org.springframework.web.servlet.view.RedirectView org.springframework.social.connect.web.ProviderSignInController.signIn(java.lang.String,org.springframework.web.context.request.NativeWebRequest)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/signin/{providerId}],methods=[GET]}" onto public org.springframework.web.servlet.view.RedirectView org.springframework.social.connect.web.ProviderSignInController.canceledAuthorizationCallback()
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/signin/{providerId}],methods=[GET],params=[code]}" onto public org.springframework.web.servlet.view.RedirectView org.springframework.social.connect.web.ProviderSignInController.oauth2Callback(java.lang.String,java.lang.String,org.springframework.web.context.request.NativeWebRequest)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/signin/{providerId}],methods=[GET],params=[oauth_token]}" onto public org.springframework.web.servlet.view.RedirectView org.springframework.social.connect.web.ProviderSignInController.oauth1Callback(java.lang.String,org.springframework.web.context.request.NativeWebRequest)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/signin/{providerId}],methods=[GET],params=[error]}" onto public org.springframework.web.servlet.view.RedirectView org.springframework.social.connect.web.ProviderSignInController.oauth2ErrorCallback(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.web.context.request.NativeWebRequest)
[main] INFO org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[main] INFO org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[main] INFO org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in exceptionHandlingControllerAdvice
[main] INFO org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in repositoryRestExceptionHandler
[main] INFO org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
[main] INFO org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2cb2fc20: startup date [Sat Mar 11 02:02:32 PST 2017]; root of context hierarchy
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter - Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
[main] INFO org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping - Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json || application/*+json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
[main] INFO org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping - Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
[main] INFO org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping - Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
[main] INFO org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping - Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
[main] INFO org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping - Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
[main] INFO org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping - Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
[main] INFO org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in exceptionHandlingControllerAdvice
[main] INFO org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in repositoryRestExceptionHandler
[main] INFO org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
[main] INFO org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[main] INFO org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[main] INFO org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[main] INFO org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[main] INFO org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/actuator || /actuator.json],produces=[application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
[main] INFO org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[main] INFO org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[main] INFO org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[main] INFO org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[main] INFO org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[main] INFO org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[main] INFO org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/health || /health.json],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(java.security.Principal)
[main] INFO org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[main] INFO org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[main] INFO org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
[main] INFO org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Registering beans for JMX exposure on startup
[main] INFO org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
[main] INFO org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[main] INFO org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[main] INFO org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[main] INFO org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[main] INFO org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[main] INFO org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[main] INFO org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[main] INFO org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[main] INFO org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[main] INFO org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[main] INFO org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
[main] INFO com.cicidi.home.Application - Started Application in 9.777 seconds (JVM running for 10.209)
Mar 11, 2017 2:03:10 AM org.apache.catalina.core.ApplicationContext log
INFO: Initializing Spring FrameworkServlet 'dispatcherServlet'
[http-nio-8080-exec-1] INFO org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
[http-nio-8080-exec-1] INFO org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<profile>
    <firstName>Walter</firstName>
    <lastName>Chen</lastName>
    <faceImg>
        img/resume_photo/face.jpg
    </faceImg>
    <objective>
        <title></title>
        <personalEstimate>7 yrs Java Experience, Full stack developer</personalEstimate>
        <interests>I am interest in any kind of new technolgoy</interests>
        <whyCreateThisPage></whyCreateThisPage>
        <contentImg>
            img/resume_photo/plant_2.jpg
        </contentImg>
    </objective>
    <contact>
        <phone></phone>
        <address>
            <number></number>
            <street></street>
            <city>Fremont</city>
            <state>CA</state>
            <country>US</country>
            <zipCode></zipCode>
        </address>
        <linkList>
            <link>
                <name>GitHub</name>
                <url>cicidi.github.com</url>
                <pic></pic>
            </link>
            <link>
                <name>Email</name>
                <url>cicidi@gmail.com</url>
                <pic></pic>
            </link>
            <link>
                <name>Linkedin</name>
                <url>waltchen.linkedin</url>
                <pic></pic>
            </link>
        </linkList>
    </contact>
    <educationList>
        <education>
            <name>University of Florida</name>
            <address>
                <number></number>
                <street></street>
                <city>Gainesville</city>
                <state>Florida</state>
                <country>US</country>
                <zipCode></zipCode>
            </address>
            <start>08-2010</start>
            <end>04-2012</end>
            <startName>August 2010</startName>
            <endName>April 2012</endName>
            <length>1yr 8mos</length>
            <photo>img/resume_photo/uf_pic.jpg</photo>
            <icon>https://media.licdn.com/mpr/mpr/shrink_200_200/p/1/005/008/0b8/03e2d71.png</icon>
            <major>Information Systems and Operations Management</major>
            <degree>Master</degree>
        </education>
        <education>
            <name>Dalian Maritime University</name>
            <address>
                <number></number>
                <street></street>
                <city>Da Lian</city>
                <state>Liao Ning</state>
                <country>China</country>
                <zipCode></zipCode>
            </address>
            <start>09-2004</start>
            <end>06-2008</end>
            <startName>September 2004</startName>
            <endName>June 2008</endName>
            <length>3yrs 9mos</length>
            <photo>img/resume_photo/DSC_0197.jpg</photo>
            <icon>https://upload.wikimedia.org/wikipedia/en/3/3a/Dalian_Maritime_University_logo.png</icon>
            <major>Business</major>
            <degree>Bachelor</degree>
        </education>
    </educationList>
    <workExperienceList>
        <workExperience>
            <name>Blackhawk network</name>
            <address>
                <number></number>
                <street></street>
                <city>Pleasanton</city>
                <state>CA</state>
                <country>US</country>
                <zipCode></zipCode>
            </address>
            <start>10-2015</start>
            <end>03-2017</end>
            <startName>October 2015</startName>
            <endName>March 2017</endName>
            <length>1yr 5mos</length>
            <photo>img/resume_photo/IMG_4785_cut_2.jpg</photo>
            <icon>https://pbs.twimg.com/profile_images/438113203432595456/rBS9OH2u_400x400.png</icon>
            <summary>I am good</summary>
            <role>Senior developer</role>
            <bulletList>
                <bullet>
                    <content>Design implement gift card inventory</content>
                    <bulletList>
                        <bullet>
                            <content>Use REST, Spring data, Spring Boot to create inventory processing service pull card                                from various external card sources and save the card in database.</content>
                        </bullet>
                        <bullet>
                            <content>Implement inventory dataload service to manage card load status.</content>
                        </bullet>
                        <bullet>
                            <content>Create protal provide internal user UI to upload gift card data, and manipulte card                                load status by calling various web service.Use thymeleaf, js, Spring MVC, Spring                                Security.</content>
                        </bullet>
                    </bulletList>
                </bullet>
                <bullet>
                    <content>Create dashboard to real time card activation data on Global map</content>
                    <bulletList>
                        <bullet>
                            <content>The application is to show user realtime transaction on Map,and total                                account compare with last HOUR/DAY/WEEK/YEAR</content>
                        </bullet>
                        <bullet>
                            <content>Create postpone logic to cache real data use Google guava.                                Use lealet to create map on brower, and use google Map API to get geolocation.</content>
                        </bullet>
                    </bulletList>
                </bullet>
                <bullet>
                    <content>Implement EGift Card Service for Staples.</content>
                    <bulletList>
                        <bullet>
                            <content>Create project from scratch.</content>
                        </bullet>
                        <bullet>
                            <content>Implement EGift card deliver service use AWS SQS, REST, and interal Email Service                                API</content>
                        </bullet>
                        <bullet>
                            <content>Use Apache camel to handle work flow.</content>
                        </bullet>
                        <bullet>
                            <content>Release all features without any defect to production in 3 month.</content>
                        </bullet>
                    </bulletList>
                </bullet>
                <bullet>
                    <content>Refratory project</content>
                    <bulletList>
                        <bullet>
                            <content>In case of Jnterval Framework issue,I refratory 4 project by myself Use Spring Boot                                + Spring Data + Spring MVC + Mongo + MySQL</content>
                        </bullet>
                    </bulletList>
                </bullet>
            </bulletList>
        </workExperience>
        <workExperience>
            <name>Apple</name>
            <address>
                <number></number>
                <street></street>
                <city>Sunnyvale</city>
                <state>CA</state>
                <country>US</country>
                <zipCode></zipCode>
            </address>
            <start>04-2015</start>
            <end>10-2015</end>
            <startName>April 2015</startName>
            <endName>October 2015</endName>
            <length>6mos</length>
            <photo>
                img/resume_photo/Apple_cut_2.jpg
            </photo>
            <icon>
                https://www.apple.com/ac/structured-data/images/knowledge_graph_logo.png?201701231950
            </icon>
            <summary>I like macbook</summary>
            <role>Senior developer Apple</role>
            <bulletList>
                <bullet>
                    <content>Maintain support.apple.com</content>
                    <bulletList>
                        <bullet>
                            <content>Fix defects in Application.</content>
                        </bullet>
                    </bulletList>
                </bullet>
                <bullet>
                    <content>Implement data pipeline</content>
                    <bulletList>
                        <bullet>
                            <content>Implement various tool pull data from Solr search engine, HDFS, and Cassandra DB</content>
                        </bullet>
                    </bulletList>
                </bullet>
                <bullet>
                    <content>Analysis business data</content>
                    <bulletList>
                        <bullet>
                            <content>Use Hadoop MapReduce to analyze the frequency of search query, which in                                support.apple.com</content>
                        </bullet>
                        <bullet>
                            <content>Implement solution to support multi-line JSON array list, while Hadoop 2.7 only                                support single line Json data</content>
                        </bullet>
                    </bulletList>
                </bullet>
                <bullet>
                    <content>Data parsing, and formatting</content>
                    <bulletList>
                        <bullet>
                            <content>Implement solution to validate data.</content>
                        </bullet>
                        <bullet>
                            <content>Use Java/Python to create tool parsing daily log into businees report.</content>
                        </bullet>
                    </bulletList>
                </bullet>
            </bulletList>
        </workExperience>
        <workExperience>
            <name>Huawei</name>
            <address>
                <number></number>
                <street></street>
                <city>Santa Clara</city>
                <state>CA</state>
                <country>US</country>
                <zipCode></zipCode>
            </address>
            <start>05-2014</start>
            <end>04-2015</end>
            <startName>May 2014</startName>
            <endName>April 2015</endName>
            <length>11mos</length>
            <photo>
                img/resume_photo/huawei_cut_2.jpg
            </photo>
            <icon>https://upload.wikimedia.org/wikipedia/commons/thumb/0/00/Huawei.svg/150px-Huawei.svg.png</icon>
            <summary>I like macbook</summary>
            <role>Java developer</role>
            <bulletList>
                <bullet>
                    <content>Develop Eclipse Plugin</content>
                    <bulletList>
                        <bullet>
                            <content>Develop Eclipse Plugin UI using open source framework, such as EMF, JFace.</content>
                        </bullet>
                    </bulletList>
                </bullet>
                <bullet>
                    <content>Design XML driven application and tool</content>
                    <bulletList>
                        <bullet>
                            <content>The final product of our project is XML driven application/webservice, Which is                                configurable and customizable.</content>
                        </bullet>
                    </bulletList>
                </bullet>
                <bullet>
                    <content>Implement Eclipse plugin runtime</content>
                    <bulletList>
                        <bullet>
                            <content>The runtime is to use configuration then generate source code and deploy                                application automatilly.</content>
                        </bullet>
                        <bullet>
                            <content>Develop Component repository with Maven/FTP server/Nexas repository.</content>
                        </bullet>
                        <bullet>
                            <content>Auto-generate Maven pom, and auto-deploy by jenkins job.</content>
                        </bullet>
                    </bulletList>
                </bullet>
                <bullet>
                    <content>Use AngularJs, develop POC of Saas tool.</content>
                </bullet>
            </bulletList>
        </workExperience>
        <workExperience>
            <name>CGI</name>
            <address>
                <number></number>
                <street></street>
                <city>Belton</city>
                <state>TX</state>
                <country>US</country>
                <zipCode></zipCode>
            </address>
            <start>05-2013</start>
            <end>05-2014</end>
            <startName>May 2013</startName>
            <endName>May 2014</endName>
            <length>1yr</length>
            <photo>
                img/resume_photo/cgi_cut_2 (2017-02-23T07_40_07.889).jpg
            </photo>
            <icon>https://www.cgi.com/sites/default/files/cgi-logo-430.png</icon>
            <summary>I like macbook</summary>
            <role>Java Developer</role>
            <bulletList>
                <bullet>
                    <content>Work on Property Management Application</content>
                    <bulletList>
                        <bullet>
                            <content>Implement front end use JSF, Primeface, Ajax,JavaScript</content>
                        </bullet>
                        <bullet>
                            <content>Create webserice use REST,SOAP,Spring web flow.</content>
                        </bullet>
                        <bullet>
                            <content>Implement DAO layer use JDBC and hibernate,Orcale</content>
                        </bullet>
                        <bullet>
                            <content>Used multi thread to handle multiple request.Write Aspect log to handle all                                Exception and error</content>
                        </bullet>
                        <bullet>
                            <content>Implement Unit test and automation test.</content>
                        </bullet>
                    </bulletList>
                </bullet>
                <bullet>
                    <content>Work on Healthcare.gov</content>
                    <bulletList>
                        <bullet>
                            <content>Fix defect in acquiring service</content>
                        </bullet>
                        <bullet>
                            <content>Implement integration testing case..</content>
                        </bullet>
                    </bulletList>
                </bullet>
            </bulletList>
        </workExperience>
        <workExperience>
            <name>clinpharma clinical research llc</name>
            <address>
                <number></number>
                <street></street>
                <city>Princeton</city>
                <state>NJ</state>
                <country>US</country>
                <zipCode></zipCode>
            </address>
            <start>06-2012</start>
            <end>05-2013</end>
            <startName>June 2012</startName>
            <endName>May 2013</endName>
            <length>11mos</length>
            <photo>
                img/resume_photo/clinpharma.jpg
            </photo>
            <icon>
                https://media.glassdoor.com/sqls/612279/clinpharma-clinical-research-llc-squarelogo-1441971934749.png
            </icon>
            <summary>I like macbook</summary>
            <role>Java Developer</role>
            <bulletList>
                <bullet>
                    <content>Technology training</content>
                    <bulletList>
                        <bullet>
                            <content>Create various application using Spring, Hibernate, Struts ,JSF</content>
                        </bullet>
                    </bulletList>
                </bullet>
            </bulletList>
        </workExperience>
    </workExperienceList>
    <skillSets>
        <category>
            <name>Spring</name>
            <list>Spring MVC, Spring AOP, Spring Boot, Spring Data, Spring Retry, Spring Security, Spring LDAP, Spring
                Web Flow, Spring Batch
            </list>
        </category>
        <category>
            <name>J2EE</name>
            <list>REST, SOAP, JPA, Hibernate, JAXB, Jackson, Hibernate, Maven, Log4j, Logback</list>
        </category>
        <category>
            <name>Front End</name>
            <list>Thymleaf, Javascript, JSF, AngularJS, JQuery, Ajax, HTML</list>
        </category>
        <category>
            <name>Database</name>
            <list>Mysql, Oracle, Mongo</list>
        </category>
        <category>
            <name>BigData</name>
            <list>Hadoop MapReduce, Hive</list>
        </category>
        <category>
            <name>Other</name>
            <list>Linux, Unix, AWS, Shell script, python, Jenkins, Git, SVN</list>
        </category>
    </skillSets>
</profile>
Mar 11, 2017 2:03:11 AM org.hibernate.hql.internal.QueryTranslatorFactoryInitiator initiateService
INFO: HHH000397: Using ASTQueryTranslatorFactory
[http-nio-8080-exec-1] INFO org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[http-nio-8080-exec-1] INFO org.thymeleaf.templateresolver.AbstractTemplateResolver - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[http-nio-8080-exec-1] INFO org.thymeleaf.templateresolver.AbstractTemplateResolver - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
[http-nio-8080-exec-1] INFO org.thymeleaf.messageresolver.AbstractMessageResolver - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[http-nio-8080-exec-1] INFO org.thymeleaf.messageresolver.AbstractMessageResolver - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
[http-nio-8080-exec-1] INFO org.thymeleaf.TemplateEngine.CONFIG - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: org.thymeleaf.extras.springsecurity4.dialect.SpringSecurityDialect
[THYMELEAF]     * Prefix: "sec"
[THYMELEAF] * Dialect [3 of 3]: org.springframework.social.connect.web.thymeleaf.SpringSocialDialect
[THYMELEAF]     * Prefix: "social"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[http-nio-8080-exec-1] INFO org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
